---
- name: Deploy Django LocalLibrary
  hosts: app
  become: true

  vars:
    repo_url: "https://github.com/mdn/django-locallibrary-tutorial.git"
    app_dir: "/home/mila/django-locallibrary-tutorial"
    virtualenv_dir: "/opt/locallibrary/venv"
    python_bin: "/usr/bin/python3"

  tasks:
    - name: Ensure required packages are installed
      apt:
        name:
          - git
          - python3
          - python3-pip
          - python3-venv
        state: present
        update_cache: yes

    - name: Create a Python virtual environment
      command: python3 -m venv "{{ virtualenv_dir }}"
      args:
        creates: "{{ virtualenv_dir }}"

    - name: Install Python dependencies
      pip:
        requirements: "{{ app_dir }}/requirements.txt"
        virtualenv: "{{ virtualenv_dir }}"

    - name: Apply migrations
      command: "{{ virtualenv_dir }}/bin/python manage.py migrate"
      args:
        chdir: "{{ app_dir }}"

    - name: Collect static files
      command: "{{ virtualenv_dir }}/bin/python manage.py collectstatic --noinput"
      args:
        chdir: "{{ app_dir }}"

    - name: Check if Django superuser exists
      command: >
        {{ virtualenv_dir }}/bin/python manage.py shell -c
        "from django.contrib.auth import get_user_model; exit(0) if get_user_model().objects.filter(username='admin').exists() else exit(1)"
      args:
        chdir: "{{ app_dir }}"
      register: superuser_check
      ignore_errors: true

    - name: Create Django superuser (non-interactive)
      command: "{{ virtualenv_dir }}/bin/python manage.py createsuperuser --noinput --username=admin --email=admin@example.com"
      args:
        chdir: "{{ app_dir }}"
      environment:
        DJANGO_SUPERUSER_PASSWORD: "adminpassword"
      when: superuser_check.rc != 0


    #    - name: Create Django superuser (non-interactive)
    #      command: "{{ virtualenv_dir }}/bin/python manage.py createsuperuser --noinput --username=admin --email=admin@example.com"
    #      args:
    #        chdir: "{{ app_dir }}"
    #      environment:
    #        DJANGO_SUPERUSER_PASSWORD: "adminpassword"

    - name: Start Django development server
      command: "{{ virtualenv_dir }}/bin/python manage.py runserver 127.0.0.1:8000"
      args:
        chdir: "{{ app_dir }}"
      async: 300
      poll: 0

    - name: Ожидание перед проверкой сервера
      pause:
        seconds: 10

    - name: Check app running
      uri:
        url: http://127.0.0.1:8000
        return_content: yes
      register: app_response

    - name: Output main page content
      debug:
        var: app_response.content